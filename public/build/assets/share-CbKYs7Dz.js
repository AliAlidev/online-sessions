import{g as f}from"./auth-CrJnzGtq.js";$(document).ready(async function(){var t=await f();await axios.get("/events/check-token",{headers:{pageToken:t}}).then(e=>{}).catch(e=>{window.location.href=document.getElementById("main-page-url").dataset.url})});const d=document.getElementById("dropArea"),m=document.getElementById("image"),c=document.getElementById("thumbnails");d.addEventListener("click",()=>{m.click()});m.addEventListener("change",g);d.addEventListener("dragover",t=>{t.preventDefault(),d.classList.add("dragover")});d.addEventListener("dragleave",()=>{d.classList.remove("dragover")});d.addEventListener("drop",t=>{t.preventDefault(),d.classList.remove("dragover"),m.files=t.dataTransfer.files,g()});function g(){const t=m.files;if(c.innerHTML="",t.length>0){c.style.marginTop="15px";for(const e of t)if(e&&e.type.startsWith("image/")){const s=new FileReader;s.onload=function(a){const n=document.createElement("img");n.src=a.target.result,c.appendChild(n)},s.readAsDataURL(e)}}else c.style.marginTop="0"}$("#uploadForm").submit(function(t){t.preventDefault(),$(".alert").remove(),$(".image-error").attr("hidden",!0);var e=$("#storeButton");b(e);var s=$("#image-compressed")[0].files[0];if(!s)return $(".image-error").attr("hidden",!1),$(".image-error").text("Please select image"),p(e),!1;var a=$("#progressContainer");a.empty();let n=$(`
                <div class="mb-4" id="file-container-0">
                    <p class="mb-0">Stage1: File Upload ${s.name}</p>
                    <div class="progress mt-2">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                            role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"
                            style="width: 0%" id="progress-bar-0"></div>
                    </div>
                    <p id="status-0" class="text-danger d-inline-block mt-1"></p>
                    <button class="btn btn-sm btn-warning retry-btn hidden-force" style="height:15px; width:auto; font-size:10px" data-index="0" style="font-size: 12px;">Retry</button>
                </div>
            `);a.append(n),v(s,0).then(i=>{var r;clearInterval($("#status-0").data("interval")),$("#progress-bar-0").removeClass("bg-success").addClass("bg-primary").text("Completed"),$("#status-0").addClass("hidden-force"),p(e),$("#uploadForm")[0].reset(),document.getElementById("thumbnails").innerHTML="";const l=((r=i.data)==null?void 0:r.message)||"Upload completed successfully",o=$(`<div class="alert alert-success">${l}</div>`);$("#uploadForm").closest(".upload-container").prepend(o),setTimeout(()=>{o.fadeOut(500,()=>o.remove())},5e3)}).catch(i=>{p(e),console.error("Upload failed:",i)})});async function v(t,e,s){let a=new FormData;a.append("file",t);var n=$('meta[name="csrf-token"]').attr("content"),i=$("#event_id").data("id");a.append("_token",n),a.append("user_name",$("#user_name").val()),a.append("description",$("#caption").val()),a.append("file_size",$("#file_size").val()),a.append("event_id",i);var l=document.getElementById("share-post-btn").dataset.url;$(`#file-container-${e} .start-btn`).remove();try{return await axios.post(l,a,{headers:{"Content-Type":"multipart/form-data"},onUploadProgress:function(r){if(r.lengthComputable){const u=Math.round(r.loaded/r.total*100);$(`#progress-bar-${e}`).css("width",u+"%").text(u+"%"),u===100&&h(0)}},timeout:3e4})}catch(o){let r=$("#status-"+e);throw r.text("Stage2: Failed"),clearInterval(r.data("interval")),y(0),o}}function h(t){let e=$("#status-"+t),s=0;e.removeClass("hidden-force"),e.text("Stage2: Processing");let a=setInterval(()=>{s=(s+1)%4,e.text("Stage2: Processing"+".".repeat(s))},500);e.data("interval",a)}function y(t){$(`#file-container-${t} .retry-btn`).removeClass("hidden-force")}function b(t){const e=document.getElementById("spinner");e.style.display="inline-block",t.disabled=!0}function p(t){const e=document.getElementById("spinner");e.style.display="none",t.disabled=!1}$("#image").on("change",function(t){B()});function B(){const e=document.getElementById("image").files;if(!e.length)return;const s=500,a=new DataTransfer;Array.from(e).forEach(n=>{const i=n.size/1024;if(i<=s){a.items.add(n),a.files.length===e.length&&(document.getElementById("image-compressed").files=a.files,document.getElementById("file_size").value=n.size);return}const l=Math.max(.98,s/i);new Compressor(n,{quality:l,maxWidth:1024,maxHeight:1024,success(o){const r=new File([o],n.name,{type:n.type,lastModified:Date.now()});a.items.add(r),a.files.length===e.length&&(document.getElementById("image-compressed").files=a.files,document.getElementById("file_size").value=r.size)},error(o){console.error("Compression error:",o)}})})}
