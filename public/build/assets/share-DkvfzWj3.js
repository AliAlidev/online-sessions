import{g as f}from"./auth-CrJnzGtq.js";async function B(){var e=$("#global-event-data").val(),t=$("#global-event-data").data("eventGalleryUrl");if($("#global-event-data").data("eventHasP"))if(localStorage.getItem(e)){var a=await f();axios.post(t,{_token:document.querySelector('meta[name="csrf-token"]').getAttribute("content"),password:localStorage.getItem(e)},{headers:{pageToken:a}}).then(n=>{n.data.success?setTimeout(()=>{document.querySelector(".main-container").classList.remove("auth-checking"),v()},5):p()}).catch(n=>{p()})}else p();else setTimeout(()=>{document.querySelector(".main-container").classList.remove("auth-checking"),v()},5)}async function w(){var t,a;const e=await f();try{if(!(await fetch("/events/check-token",{method:"GET",headers:{pageToken:e}})).ok)throw new Error("Unauthorized");B()}catch{window.location.href=((a=(t=document.getElementById("main-page-url"))==null?void 0:t.dataset)==null?void 0:a.url)||"/"}}w();function v(){const e=document.getElementById("page-loader");e&&(e.style.display="none")}async function p(){var e=$("#global-event-data").data("url"),t=await f();axios.get(e,{headers:{pageToken:t}}).then(a=>{window.location.href=a.data.url}).catch(a=>{console.log(a)})}const c=document.getElementById("dropArea"),u=document.getElementById("image"),m=document.getElementById("thumbnails");c.addEventListener("click",()=>{u.click()});u.addEventListener("change",y);c.addEventListener("dragover",e=>{e.preventDefault(),c.classList.add("dragover")});c.addEventListener("dragleave",()=>{c.classList.remove("dragover")});c.addEventListener("drop",e=>{e.preventDefault(),c.classList.remove("dragover"),u.files=e.dataTransfer.files,y()});function y(){const e=u.files;if(m.innerHTML="",e.length>0){m.style.marginTop="15px";for(const t of e)if(t&&t.type.startsWith("image/")){const a=new FileReader;a.onload=function(n){const r=document.createElement("img");r.src=n.target.result,m.appendChild(r)},a.readAsDataURL(t)}}else m.style.marginTop="0"}function h(){const e=document.getElementById("overlay");e.classList.remove("show"),e.addEventListener("transitionend",()=>{e.classList.add("hidden")},{once:!0})}document.getElementById("closeModalBtn").addEventListener("click",h);document.getElementById("closeXBtn").addEventListener("click",h);$("#uploadForm").submit(function(e){e.preventDefault(),$(".alert").remove(),$(".image-error").attr("hidden",!0);var t=$("#storeButton");k(t);var a=$("#image-compressed")[0].files[0];if(!a)return $(".image-error").attr("hidden",!1),$(".image-error").text("Please select image"),g(t),!1;var n=$("#uploadProgressModal #progressContainer");const r=document.getElementById("overlay");r.classList.remove("hidden"),setTimeout(()=>r.classList.add("show"),10),n.empty();let i=$(`
                <div class="mb-4" id="file-container-0" style="margin-top:10px">
                    <p class="mb-0">Stage1: File Upload ${a.name}</p>
                    <div class="progress" style="margin-top:10px">
                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success"
                            role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"
                            style="width: 0%;" id="progress-bar-0"></div>
                    </div>
                    <div class='d-inline-block'>
                        <p id="status-0" class="text-danger mt-3" style="text-align:start; margin-top:10px"></p>
                        <button class="btn btn-sm btn-warning retry-btn hidden-force mt-3" style="height:15px; width:auto; font-size:12px; margin-top:10px; text-align:start" data-index="0">Retry</button>
                    </div>
                </div>
            `);n.append(i),b(a,0).then(d=>{var o;clearInterval($("#status-0").data("interval")),$("#progress-bar-0").removeClass("bg-success").addClass("bg-primary").text("Completed"),$("#status-0").addClass("hidden-force"),g(t),$("#uploadForm")[0].reset(),document.getElementById("thumbnails").innerHTML="";const l=((o=d.data)==null?void 0:o.message)||"Upload completed successfully",s=$(`<div class="alert alert-success guest-upload-success" style=""><i class="fa fa-check" aria-hidden="true"></i>${l}</div>`);$("#uploadProgressModal").prepend(s),$("#uploadProgressModalLabel").attr("hidden",!0)}).catch(d=>{g(t),console.error("Upload failed:",d)})});async function b(e,t,a){let n=new FormData;n.append("file",e);var r=$('meta[name="csrf-token"]').attr("content"),i=$("#event_id").data("id");n.append("_token",r),n.append("user_name",$("#user_name").val()),n.append("description",$("#caption").val()),n.append("file_size",$("#file_size").val()),n.append("event_id",i);var d=document.getElementById("share-post-btn").dataset.url;$(`#file-container-${t} .start-btn`).remove();try{return await axios.post(d,n,{headers:{"Content-Type":"multipart/form-data"},onUploadProgress:function(s){if(s.lengthComputable){const o=Math.round(s.loaded/s.total*100);$(`#progress-bar-${t}`).css("width",o+"%").text(o+"%"),o===100&&E(0)}},timeout:999e3})}catch(l){let s=$("#status-"+t);throw s.text("Stage2: Failed"),clearInterval(s.data("interval")),I(0),l}}function E(e){let t=$("#status-"+e),a=0;t.removeClass("hidden-force"),t.text("Stage2: Processing");let n=setInterval(()=>{a=(a+1)%4,t.text("Stage2: Processing"+".".repeat(a))},500);t.data("interval",n)}function I(e){$(`#file-container-${e} .retry-btn`).removeClass("hidden-force")}$(document).on("click",".retry-btn",function(e){e.preventDefault(),$(this).addClass("hidden-force");var t=$("#image-compressed")[0].files[0];$("#progress-bar-0").css("width","0%").removeClass("bg-danger").addClass("bg-success").text("0%"),$("#status-0").text("Stage2: Retrying..."),b(t,0)});function k(e){const t=document.getElementById("spinner");t.style.display="inline-block",e.disabled=!0}function g(e){const t=document.getElementById("spinner");t.style.display="none",e.disabled=!1}$("#image").on("change",function(e){x()});async function x(e){const a=document.getElementById("image").files[0];if(!a)return;let n=[];try{var r=document.getElementById("compression-ratios-file-path");const s=await fetch(r.value);if(!s.ok)throw new Error(`Failed to fetch compression ratios: ${s.status}`);n=await s.json()}catch(s){console.error("Error loading compression ratios:",s),n=[{minSizeMB:10,quality:.7},{minSizeMB:9,quality:.75},{minSizeMB:8,quality:.8},{minSizeMB:7,quality:.85},{minSizeMB:6,quality:.9},{minSizeMB:5,quality:.91},{minSizeMB:4,quality:.92},{minSizeMB:3,quality:.93},{minSizeMB:2,quality:.94},{minSizeMB:1,quality:.95},{minSizeMB:.5,quality:.99}]}const i=new DataTransfer,d=a.size/(1024*1024);let l=null;for(const s of n)if(d>s.minSizeMB){l=Math.max(s.quality,.7);break}l===null?(i.items.add(a),document.getElementById("image-compressed").files=i.files,document.getElementById("file_size").value=a.size):new Compressor(a,{quality:l,maxWidth:1920,maxHeight:1920,success(s){const o=new File([s],a.name,{type:a.type,lastModified:Date.now()});i.items.add(o),document.getElementById("image-compressed").files=i.files,document.getElementById("file_size").value=o.size},error(s){console.error(`Compression error for ${a.name}:`,s)}})}
