const c="OnlineEventSharingDB";let i;const a=h();async function w(){i=await d();const e=i.transaction("authentications","readonly").objectStore("authentications").get(a);e.onsuccess=async function(){if(e.result===void 0){var t=await l();g({fingerprint:a,token:t})}}}async function d(){return new Promise((n,o)=>{const e=indexedDB.open(c,1);e.onupgradeneeded=t=>{const r=t.target.result;r.objectStoreNames.contains("authentications")||r.createObjectStore("authentications",{keyPath:"fingerprint"}).createIndex("token","token",{unique:!0})},e.onsuccess=t=>{n(t.target.result)},e.onerror=t=>{o(t.target.error)}})}function g(n){const o=i.transaction("authentications","readwrite"),e=o.objectStore("authentications");let t=e.get(n.fingerprint);t.onsuccess=function(){t.result===void 0&&e.add(n)},o.onsuccess=()=>{console.log("Data saved successfully")},o.onerror=r=>{console.error("Error saving data:",r.target.error)}}async function l(){if(!await f())return new Promise((n,o)=>{var e=document.getElementById("auth-token-url").value;fetch(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({fingerprint:a})}).then(t=>{if(!t.ok)throw new Error("Network response was not ok");return t.json()}).then(t=>{n(t.token)}).catch(t=>{o(event.target.error)})})}async function f(){return new Promise((n,o)=>{var e=indexedDB.open(c,1);e.onsuccess=t=>{var s=t.target.result.transaction("authentications","readonly").objectStore("authentications").get(a);s.onsuccess=function(){n(s.result?s.result.token:null)},s.onerror=function(p){o("Failed to get token")}}})}function h(){const n=`${navigator.userAgent}|${window.screen.width}x${window.screen.height}|${Intl.DateTimeFormat().resolvedOptions().timeZone}|${navigator.hardwareConcurrency}`;return sha256(n)}export{f as g,w as i};
